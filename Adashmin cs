using System;
using System.Configuration;
using System.Data;
using MySql.Data.MySqlClient;
using System.Web.UI;
using System.Web.UI.WebControls;

namespace WebApplication1
{
    public partial class dashmin : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {
            if (!IsPostBack)
            {
                BindComplaints();
                DisplayComplaintsCount();
                SetSettledComplaintsCount();
            }
        }

        private void BindComplaints()
        {
            try
            {
                // Construct your connection string
                string connectionString = "server=localhost;database=WEC;uid=root;pwd=";

                // Construct your SQL query
                string query = "SELECT reportId, reporttype, address, others, filepath, datesubmitted FROM complaints";

                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    using (MySqlCommand command = new MySqlCommand(query, connection))
                    {
                        connection.Open();
                        using (MySqlDataReader reader = command.ExecuteReader())
                        {
                            ComplaintsRepeater.DataSource = reader;
                            ComplaintsRepeater.DataBind();

                            // Check if there are any records
                            if (reader.HasRows)
                            {
                                // Move to the first record
                                reader.Read();
                                // Get the value of datesubmitted for debugging
                                string debugValue = reader["datesubmitted"].ToString();
                                // Set the text of DebugLiteral to debugValue
                                DebugLiteral.Text = debugValue;
                            }
                            else
                            {
                                DebugLiteral.Text = "No records found.";
                            }
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                // Log the exception
                DebugLiteral.Text = "An error occurred: " + ex.Message;
                Console.WriteLine("An error occurred in BindComplaints: " + ex.Message);
            }
        }

        private void DisplayComplaintsCount()
        {
            try
            {
                // Construct your connection string
                string connectionString = "server=localhost;database=WEC;uid=root;pwd=";

                // Construct your SQL query to get the count of complaints
                string query = "SELECT COUNT(*) FROM complaints";

                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    using (MySqlCommand command = new MySqlCommand(query, connection))
                    {
                        // Open connection
                        connection.Open();

                        // Execute the command and get the count
                        int count = Convert.ToInt32(command.ExecuteScalar());

                        // Assign the count to the ComplaintsCount literal control
                        ComplaintsCount.Text = count.ToString();
                    }
                }
            }
            catch (Exception ex)
            {
                // Log the exception
                Console.WriteLine("An error occurred in DisplayComplaintsCount: " + ex.Message);
            }
        }

        private void SetSettledComplaintsCount()
        {
            try
            {
                // Construct your connection string
                string connectionString = "server=localhost;database=WEC;uid=root;pwd=";

                // Construct your SQL query to get the count of settled complaints
                string query = "SELECT COUNT(*) FROM resolvedcomps";

                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    using (MySqlCommand command = new MySqlCommand(query, connection))
                    {
                        // Open connection
                        connection.Open();

                        // Execute the command and get the count
                        int count = Convert.ToInt32(command.ExecuteScalar());

                        // Assign the count to the SettledComplaintsCount literal control
                        SettledComplaintsCount.Text = count.ToString();
                    }
                }
            }
            catch (Exception ex)
            {
                // Log the exception
                Console.WriteLine("An error occurred in SetSettledComplaintsCount: " + ex.Message);
            }
        }

        protected string GetImagePath(object filepath)
        {
            if (filepath != null)
            {
                string fileName = filepath.ToString();
                return "~/uploads/" + fileName;
            }
            return string.Empty;
        }

        private void ConfirmComplaint(int complaintIndex)
        {
            try
            {
                string connectionString = "server=localhost;database=WEC;uid=root;pwd=";
                string query = "INSERT INTO resolvedcomps (reporttype, address, others, filepath, datesubmitted) " +
                               "SELECT reporttype, address, others, filepath, datesubmitted " +
                               "FROM complaints WHERE reportId = @reportId";

                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    using (MySqlCommand command = new MySqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@reportId", complaintIndex);
                        connection.Open();
                        int rowsAffected = command.ExecuteNonQuery();

                        if (rowsAffected > 0)
                        {
                            DeleteComplaint(complaintIndex);
                            // Display success message
                            ScriptManager.RegisterStartupScript(this, GetType(), "ShowSuccessMessage", "alert('The report has been resolved');", true);
                        }
                    }
                }
            }
            catch (Exception ex)
            {
                // Log the exception
                Console.WriteLine("An error occurred in ConfirmComplaint: " + ex.Message);
                // Rethrow the exception to be caught by the caller
                throw;
            }
        }

        private void DeleteComplaint(int complaintIndex)
        {
            try
            {
                string connectionString = "server=localhost;database=WEC;uid=root;pwd=";
                string query = "DELETE FROM complaints WHERE reportId = @reportId";

                using (MySqlConnection connection = new MySqlConnection(connectionString))
                {
                    using (MySqlCommand command = new MySqlCommand(query, connection))
                    {
                        command.Parameters.AddWithValue("@reportId", complaintIndex);
                        connection.Open();
                        command.ExecuteNonQuery();
                    }
                }
            }
            catch (Exception ex)
            {
                // Log the exception
                Console.WriteLine("An error occurred in DeleteComplaint: " + ex.Message);
                // Rethrow the exception to be caught by the caller
                throw;
            }
        }

        protected void Button2_Click(object sender, EventArgs e)
        {
            Button confirmButton = (Button)sender;
            int index = int.Parse(confirmButton.CommandArgument);
            try
            {
                ConfirmComplaint(index);
                BindComplaints(); // Refresh the complaints list after confirming a complaint
                Response.Redirect(Request.RawUrl);
            }
            catch (Exception ex)
            {
                // Log the exception
                Console.WriteLine("An error occurred in Button2_Click: " + ex.Message);
                // Display an error message to the user
                ScriptManager.RegisterStartupScript(this, GetType(), "ShowErrorMessage", "alert('An error occurred. Please try again later.');", true);
            }
        }
    }
}
